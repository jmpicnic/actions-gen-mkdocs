---
name: action-build-mkdocs
description: Reusable Action to generate mkdocs.
inputs:
  docs-dir:
    description: |
      Directory where the mkdocs.yml and requirements.txt file are expected to be and from where the content directory can be accessed (as configured in mkdocs.yml)
    default: "."
  site-target-dir:
    description: |
      Directory where the site is to be generated, **RELATIVE TO `docs-dir`**
    default: "./site"
  requirements-file-name:
    description: The name of the Python requirements file relative to docs-dir
    default: "requirements.txt"
  mkdocs-file-name:
    description: "The name of the mkdocs config file relative to docs-dir"
    default: "mkdocs.yml"
  for-techdocs:
    description: Whether the generation is intended to be used with techdocs-cli to publish to Backstage
    default: "True"
outputs:
  generated-site:
    description: The directory where the generated site is placed
    value: ${{ steps.setup-paths.outputs.site-output-dir }}
runs:
  using: composite
  steps:
    - name: Set up paths
      id: setup-paths
      shell: bash
      run: |
        OUT_DIR=`realpath ${{ inputs.docs-dir }}/${{ inputs.site-target-dir }}`
        echo "site-output-dir=$OUT_DIR" >> "$GITHUB_OUTPUT"
        REAL_REQ_PATH=`realpath ${{ inputs.docs-dir }}/${{ inputs.requirements-file-name }}`
        echo "requirements-file=$REAL_REQ_PATH" >> "$GITHUB_OUTPUT"
        MKDOCS_PATH=`realpath ${{ inputs.docs-dir }}/${{ inputs.mkdocs-file-name }}`
        echo "mkdocs-file=$MKDOCS_PATH" >> "$GITHUB_OUTPUT"
    - name: Install Ubuntu Packages
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        version: 1.0
        packages: graphviz texlive pandoc ghostscript tree
        # execute_install_scripts: true
    - name: Install Java
      uses: actions/setup-java@v3
      with:
        distribution: corretto
        java-version: '21'
    - name: get the latest plantuml
      shell: bash
      run: |
        wget -q https://github.com/plantuml/plantuml/releases/download/v1.2023.12/plantuml-1.2023.12.jar -O plantuml.jar
    - name: Check dot installation
      shell: bash
      run: |
        which dot
        sudo dot -c
        java -Djava.awt.headless=true -jar plantuml.jar -testdot
    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: pip
        cache-dependency-path: ${{ steps.setup-paths.outputs.requirements-file }}
    - name: Upgrade pip & install from ${{ steps.setup-paths.outputs.requirements-file }}
      shell: bash
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install -r ${{ steps.setup-paths.outputs.requirements-file }}
#        python3 -m pip install pypandoc
#        python3 -c "from pypandoc.pandoc_download import download_pandoc;download_pandoc()"
    - name: Check Versions
      shell: bash
      run: |
        lsb_release -a
        python --version
        java --version
        mkdocs --version
        pandoc --version
        echo -n "ghostscript: "
        gs --version
        latex --version
        dot -V
        java -Djava.awt.headless=true -jar plantuml.jar -version
    - name: Run Mkdocs
      id: run-mkdocs
      shell: bash
      run: |
        export PATH="$PWD:$PATH"
        echo "==== Running with"
        echo "==> PATH: $PATH"
        echo "==> MKDOCS_FILE: ${{ steps.setup-paths.outputs.mkdocs-file }}" 
        echo "==> SITE_DIR: ${{ steps.setup-paths.outputs.site-output-dir }}"
        mkdocs build -s --config-file "${{ steps.setup-paths.outputs.mkdocs-file }}" --site-dir ${{ inputs.site-target-dir }}
    - name: Fix permissions
      shell: bash
      run: |
        chmod -c -R +rX ${{ steps.setup-paths.outputs.site-output-dir }} | while read line; do
          echo "::warning title=Invalid file permissions automatically fixed::$line"
        done
    - name: Generate Tech-docs metadata
      id: gen-techdocs-metadata
      if: |
        inputs.for-techdocs == 'true' || inputs.for-techdocs == 'True' 
          || inputs.for-techdocs == 'yes' || inputs.for-techdocs == 'Yes' 
      shell: bash
      run: |
        sudo wget -qO yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
        sudo chmod +x yq
        ./yq -oj eval '{"site_description" : .site_description, "site_name" : .site_name}' \
        "${{ steps.setup-paths.outputs.mkdocs-file }}" > \
        "${{ steps.setup-paths.outputs.site-output-dir }}/techdocs_metadata.json"
